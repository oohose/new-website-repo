// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id             String     @id @default(cuid())
  key            String     @unique
  name           String
  description    String?
  isPrivate      Boolean    @default(false)
  parentId       String?
  parent         Category?  @relation("CategoryParent", fields: [parentId], references: [id])
  subcategories  Category[] @relation("CategoryParent")
  images         Image[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  socialLinks Json?
}

model Image {
  id           String   @id @default(cuid())
  title        String
  description  String?
  cloudinaryId String   @unique
  url          String
  width        Int?
  height       Int?
  format       String?
  bytes        Int?     // Keep existing column (file size in bytes)
  isHeader     Boolean  @default(false) // Keep existing column
  order        Int      @default(0)
  categoryId   String
  category     Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String   @db.Text
  eventType String?
  eventDate DateTime?
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}